
FROM node:22-alpine AS base
WORKDIR /app
RUN npm install -g pnpm

FROM base AS deps
WORKDIR /app
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml turbo.json ./
COPY apps/worker-backend/package.json ./apps/worker-backend/package.json
COPY apps/worker-backend/tsconfig.json ./apps/worker-backend/tsconfig.json
COPY apps/worker-backend/tsconfig.build.json ./apps/worker-backend/tsconfig.build.json
COPY packages/backend-common/package.json ./packages/backend-common/package.json
COPY packages/backend-common/tsconfig.json ./packages/backend-common/tsconfig.json
COPY packages/backend-common/tsconfig.build.json ./packages/backend-common/tsconfig.build.json
COPY packages/db/package.json ./packages/db/package.json
COPY packages/typescript-config/package.json ./packages/typescript-config/package.json
RUN pnpm install --frozen-lockfile

FROM base AS builder
WORKDIR /app
COPY --from=deps /app .
COPY apps/worker-backend ./apps/worker-backend
COPY packages/backend-common ./packages/backend-common
COPY packages/db ./packages/db
RUN pnpm run build:worker-backend

FROM node:22-alpine AS runner
WORKDIR /app
RUN npm install -g pnpm

COPY --from=builder /app/apps/worker-backend ./apps/worker-backend
COPY --from=builder /app/packages/backend-common ./packages/backend-common
COPY --from=builder /app/packages/db ./packages/db
COPY --from=builder /app/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=builder /app/pnpm-workspace.yaml ./pnpm-workspace.yaml
COPY --from=builder /app/package.json ./package.json
RUN   pnpm bridge:symlink-worker-backend

RUN set -e && \
echo "Cleaning TypeScript source files and dev-only folders..." && \
cd /app/apps/worker-backend && \
echo "Cleaning /app/apps/worker-backend..." && \
find . -type f -name "*.ts" ! -path "./dist/*" -delete && \
find . -name "*.tsbuildinfo" -delete && \
rm -rf controllers routes services utils middleware zodSchema src && \
rm -f tsconfig.json tsconfig.build.json && \
cd /app/packages/backend-common && \
echo "Cleaning /app/packages/backend-common..." && \
find . -type f -name "*.ts" ! -path "./dist/*" -delete && \
find . -name "*.tsbuildinfo" -delete && \
rm -rf src && \
rm -f tsconfig.json tsconfig.build.json && \
echo "Cleanup complete. Only dist/, config, and runtime deps remain."

RUN rm -rf /usr/local/lib/node_modules/npm \
  /usr/local/bin/npm \
  /usr/local/bin/npx \
  ~/.npm /root/.npm

ENV NODE_ENV=production
EXPOSE 3002
CMD ["pnpm","run","start:worker-backend"]

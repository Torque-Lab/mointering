// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User{
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  name String?
  image String?
  username String @unique 
  password String
  websites Website[]
}

model Website {
  id        String        @id @default(uuid())
  url       String
  serviceName String
  isDeleted Boolean @default(false)
  email String
  createdAt DateTime      @default(now())
  ticks     WebsiteTick[] @relation("WebsiteTicks") 
  user_id   String
  user      User          @relation(fields: [user_id], references: [id])
}

model Region {
  id    String        @id @default(uuid())
  name  String
  ticks WebsiteTick[]
}

model WebsiteTick {
  id               String        @default(uuid())
  response_time_ms Int
  status           WebsiteStatus
  region_id        String
  website_id       String
  region           Region        @relation(fields: [region_id], references: [id])
  website          Website       @relation("WebsiteTicks",fields: [website_id], references: [id] , onDelete: Cascade)
  createdAt        DateTime      @default(now()) @db.Timestamptz(6)
  
  @@id([id, createdAt])
  @@index([createdAt])
  @@map("website_tick")
}

enum WebsiteStatus {
  Up
  Down
  Unknown
}
